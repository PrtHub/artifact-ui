{
  "name": "infinite-scroll",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion"
  ],
  "files": [
    {
      "path": "ui/infinite-scroll.tsx",
      "content": "import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\n\ninterface Tag {\n  id: string;\n  label: string;\n}\n\ninterface InfiniteScrollProps {\n  className?: string;\n  /** Array of tag objects */\n  tags: Tag[];\n  /** Duration of the animation in milliseconds */\n  duration?: number;\n  /** Direction of the scroll */\n  direction?: \"normal\" | \"reverse\";\n  /** Background color of the container */\n  containerColor?: string;\n  /** Whether to show the fade effect at the edges */\n  showFade?: boolean;\n}\n\nexport function InfiniteScroll({\n  className,\n  tags,\n  duration = 15000,\n  direction = \"normal\",\n  containerColor = \"#ffffff\",\n  showFade = true,\n}: InfiniteScrollProps) {\n  // Create two groups for seamless scrolling\n  const group = [...tags, ...tags];\n\n  return (\n    <div\n      className={cn(\n        \"relative flex shrink-0 flex-col gap-4 overflow-hidden py-3\",\n        className,\n      )}\n    >\n      <div className=\"flex\">\n        <motion.div\n          className=\"flex shrink-0\"\n          animate={{\n            x: direction === \"normal\" ? \"-50%\" : \"0%\",\n          }}\n          initial={{\n            x: direction === \"normal\" ? \"0%\" : \"-50%\",\n          }}\n          transition={{\n            x: {\n              duration: duration / 1000,\n              repeat: Infinity,\n              ease: \"linear\",\n              repeatType: \"loop\",\n            },\n          }}\n        >\n          {group.map((tag, idx) => (\n            <motion.div\n              key={`${tag.id}-${idx}`}\n              className=\"mr-4 flex items-center gap-[0.2rem] rounded-[0.4rem] bg-black px-4 py-[0.7rem] text-[0.9rem] text-white shadow-[0_0.1rem_0.2rem_rgb(0_0_0_/_20%),0_0.1rem_0.5rem_rgb(0_0_0_/_30%),0_0.2rem_1.5rem_rgb(0_0_0_/_40%)] dark:bg-white dark:text-black\"\n              whileHover={{ scale: 1.05 }}\n              transition={{ type: \"spring\", stiffness: 400, damping: 10 }}\n            >\n              {tag.label}\n            </motion.div>\n          ))}\n        </motion.div>\n        <motion.div\n          className=\"flex shrink-0\"\n          animate={{\n            x: direction === \"normal\" ? \"-50%\" : \"0%\",\n          }}\n          initial={{\n            x: direction === \"normal\" ? \"0%\" : \"-50%\",\n          }}\n          transition={{\n            x: {\n              duration: duration / 1000,\n              repeat: Infinity,\n              ease: \"linear\",\n              repeatType: \"loop\",\n            },\n          }}\n        >\n          {group.map((tag, idx) => (\n            <motion.div\n              key={`${tag.id}-${idx}-clone`}\n              className=\"mr-4 flex items-center gap-[0.2rem] rounded-[0.4rem] bg-black px-4 py-[0.7rem] text-[0.9rem] text-white shadow-[0_0.1rem_0.2rem_rgb(0_0_0_/_20%),0_0.1rem_0.5rem_rgb(0_0_0_/_30%),0_0.2rem_1.5rem_rgb(0_0_0_/_40%)] dark:bg-white dark:text-black\"\n              whileHover={{ scale: 1.05 }}\n              transition={{ type: \"spring\", stiffness: 400, damping: 10 }}\n            >\n              {tag.label}\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n      {showFade && (\n        <div\n          className=\"pointer-events-none absolute inset-0\"\n          style={{\n            background: `linear-gradient(90deg, ${containerColor}, transparent 30%, transparent 70%, ${containerColor})`,\n          }}\n        />\n      )}\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}