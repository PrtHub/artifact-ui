{
  "name": "typewriter-hero",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/typewriter-hero.tsx",
      "content": "import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface TypewriterHeroProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  title?: string;\n  description?: string;\n  words?: string[];\n  typingSpeed?: number;\n  deletingSpeed?: number;\n  pauseDuration?: number;\n  className?: string;\n  titleClassName?: string;\n  descriptionClassName?: string;\n  typingClassName?: string;\n  cursorClassName?: string;\n  align?: \"left\" | \"center\" | \"right\";\n}\n\nexport default function TypewriterHero({\n  title = \"Welcome to\",\n  description = \"A modern and beautiful UI library for React\",\n  words = [\"Beautiful\", \"Modern\", \"Responsive\", \"Accessible\"],\n  typingSpeed = 100,\n  deletingSpeed = 50,\n  pauseDuration = 2000,\n  className,\n  titleClassName,\n  descriptionClassName,\n  typingClassName,\n  cursorClassName,\n  align = \"center\",\n  ...props\n}: TypewriterHeroProps) {\n  const [currentText, setCurrentText] = React.useState(\"\");\n  const [currentIndex, setCurrentIndex] = React.useState(0);\n  const [isDeleting, setIsDeleting] = React.useState(false);\n  const [isWaiting, setIsWaiting] = React.useState(false);\n\n  React.useEffect(() => {\n    const timeout = setTimeout(\n      () => {\n        if (isWaiting) {\n          setIsWaiting(false);\n          setIsDeleting(true);\n          return;\n        }\n\n        if (isDeleting) {\n          if (currentText === \"\") {\n            setIsDeleting(false);\n            setCurrentIndex((prev) => (prev + 1) % words.length);\n          } else {\n            setCurrentText((prev) => prev.slice(0, -1));\n          }\n        } else {\n          const targetWord = words[currentIndex];\n          if (currentText === targetWord) {\n            setIsWaiting(true);\n          } else {\n            setCurrentText((prev) => targetWord.slice(0, prev.length + 1));\n          }\n        }\n      },\n      isWaiting ? pauseDuration : isDeleting ? deletingSpeed : typingSpeed\n    );\n\n    return () => clearTimeout(timeout);\n  }, [\n    currentText,\n    currentIndex,\n    isDeleting,\n    isWaiting,\n    words,\n    typingSpeed,\n    deletingSpeed,\n    pauseDuration,\n  ]);\n\n  return (\n    <div\n      className={cn(\n        \"relative w-full overflow-hidden py-24\",\n        align === \"center\" && \"text-center\",\n        align === \"right\" && \"text-right\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"relative mx-auto max-w-5xl px-4 sm:px-6 lg:px-8\">\n        {title && (\n          <h1\n            className={cn(\n              \"text-4xl font-extrabold tracking-tight sm:text-5xl lg:text-6xl\",\n              titleClassName\n            )}\n          >\n            {title}{\" \"}\n            <span\n              className={cn(\n                \"bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 bg-clip-text text-transparent\",\n                typingClassName\n              )}\n            >\n              {currentText}\n              <span\n                className={cn(\n                  \"ml-1 inline-block h-[1em] w-[2px] animate-text-blink\",\n                  cursorClassName\n                )}\n                aria-hidden=\"true\"\n              />\n            </span>\n          </h1>\n        )}\n        {description && (\n          <p\n            className={cn(\n              \"mt-6 max-w-3xl text-xl text-gray-600 dark:text-gray-400\",\n              align === \"center\" && \"mx-auto\",\n              align === \"right\" && \"ml-auto\",\n              descriptionClassName\n            )}\n          >\n            {description}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}