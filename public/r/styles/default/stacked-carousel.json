{
  "name": "stacked-carousel",
  "type": "registry:ui",
  "dependencies": [],
  "files": [
    {
      "path": "xanthic/stacked-carousel.tsx",
      "content": "import React, { useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface StackedCarouselProps {\n  slides: {\n    image: string;\n  }[];\n  className?: string;\n}\n\nexport default function StackedCarousel({\n  slides,\n  className,\n}: StackedCarouselProps) {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const nextSlide = () => {\n    setActiveIndex((prev) => (prev + 1) % slides.length);\n  };\n\n  const prevSlide = () => {\n    setActiveIndex((prev) => (prev - 1 + slides.length) % slides.length);\n  };\n\n  const getSlideIndex = (index: number) => {\n    const positions = slides.map((_, i) => {\n      const diff = (i - activeIndex + slides.length) % slides.length;\n      return diff;\n    });\n    return positions[index];\n  };\n\n  return (\n    <div className={cn(\"relative h-[400px] w-[400px]\", className)}>\n      {/* Navigation Buttons */}\n      <button\n        onClick={prevSlide}\n        className=\"absolute -left-12 top-1/2 z-50 -translate-y-1/2 rounded-full bg-white/10 p-2 text-white backdrop-blur-md transition-all hover:bg-white/20\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth={1.5}\n          stroke=\"currentColor\"\n          className=\"h-6 w-6\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M15.75 19.5L8.25 12l7.5-7.5\"\n          />\n        </svg>\n      </button>\n      <button\n        onClick={nextSlide}\n        className=\"absolute -right-12 top-1/2 z-50 -translate-y-1/2 rounded-full bg-white/10 p-2 text-white backdrop-blur-md transition-all hover:bg-white/20\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth={1.5}\n          stroke=\"currentColor\"\n          className=\"h-6 w-6\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M8.25 4.5l7.5 7.5-7.5 7.5\"\n          />\n        </svg>\n      </button>\n\n      {/* Slides */}\n      <div className=\"relative h-full w-full\">\n        {slides.map((slide, index) => {\n          const position = getSlideIndex(index);\n          return (\n            <div\n              key={index}\n              className={cn(\n                \"absolute left-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 rounded-2xl transition-all duration-700\",\n                \"cursor-pointer hover:scale-105\",\n                {\n                  \"z-30\": position === 0,\n                  \"z-20\": position === 1 || position === slides.length - 1,\n                  \"z-10\": position === 2 || position === slides.length - 2,\n                  \"opacity-0\": position > 2 && position < slides.length - 2,\n                  \"-translate-x-[98%]\": position === slides.length - 1,\n                  \"translate-x-[0%]\": position === 1,\n                  \"scale-90\": position !== 0,\n                  \"-rotate-12\": position === slides.length - 1,\n                  \"rotate-12\": position === 1,\n                },\n              )}\n              onClick={() => position !== 0 && setActiveIndex(index)}\n              style={{\n                backgroundImage: `url(${slide.image})`,\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n                boxShadow:\n                  position === 0\n                    ? \"0 0 30px rgba(0, 0, 0, 0.4)\"\n                    : \"0 0 20px rgba(0, 0, 0, 0.3)\",\n              }}\n            >\n              <div\n                className={cn(\n                  \"absolute inset-0 rounded-2xl bg-gradient-to-br transition-opacity duration-700\",\n                )}\n              />\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Indicators */}\n      <div className=\"absolute -bottom-12 left-1/2 flex -translate-x-1/2 gap-2\">\n        {slides.map((_, index) => (\n          <button\n            key={index}\n            onClick={() => setActiveIndex(index)}\n            className={cn(\n              \"h-2 w-2 rounded-full transition-all\",\n              index === activeIndex\n                ? \"w-6 bg-white\"\n                : \"bg-white/50 hover:bg-white/75\",\n            )}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}