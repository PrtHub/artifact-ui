{
  "name": "starfall",
  "type": "registry:ui",
  "dependencies": [
    ""
  ],
  "files": [
    {
      "path": "ui/starfall.tsx",
      "content": "import React, { useEffect, useState, useCallback } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface StarfallProps extends React.HTMLAttributes<HTMLDivElement> {\n  count?: number;\n  speed?: number;\n  variant?:\n    | \"cosmic\"\n    | \"aurora\"\n    | \"minimal\"\n    | \"gradient\"\n    | \"neon\"\n    | \"sunset\"\n    | \"ocean\"\n    | \"forest\";\n  showBackground?: boolean;\n  backgroundStars?: number;\n  backgroundOpacity?: number;\n}\n\ninterface Star {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  speed: number;\n  color: string;\n  sparkRadius: number;\n}\n\nconst VARIANT_COLORS = {\n  cosmic: [\n    \"#FFD700\",\n    \"#FF69B4\",\n    \"#00FFFF\",\n    \"#FF4500\",\n    \"#7FFF00\",\n    \"#FF1493\",\n    \"#00FF7F\",\n    \"#FF00FF\",\n    \"#1E90FF\",\n    \"#32CD32\",\n  ],\n  aurora: [\n    \"#80FFB2\",\n    \"#40E0D0\",\n    \"#48D1CC\",\n    \"#7FFFD4\",\n    \"#98FF98\",\n    \"#90EE90\",\n    \"#00FA9A\",\n    \"#00FF7F\",\n    \"#98FB98\",\n    \"#7CCD7C\",\n  ],\n  minimal: [\n    \"#FFFFFF\",\n    \"#F8F8FF\",\n    \"#F5F5F5\",\n    \"#FFFAFA\",\n    \"#F0F8FF\",\n    \"#F0FFFF\",\n    \"#F5FFFA\",\n    \"#FFF5EE\",\n    \"#FFFAF0\",\n    \"#F0FFF0\",\n  ],\n  gradient: [\n    \"#FF6B6B\",\n    \"#FF8E8E\",\n    \"#FFA4A4\",\n    \"#FFB1B1\",\n    \"#FFCBCB\",\n    \"#4ECDC4\",\n    \"#45B7AF\",\n    \"#3CA29A\",\n    \"#338D86\",\n    \"#2A7871\",\n  ],\n  neon: [\n    \"#FF1177\",\n    \"#FF0A54\",\n    \"#FF0055\",\n    \"#FF004D\",\n    \"#FF0033\",\n    \"#FF00FF\",\n    \"#FF1493\",\n    \"#FF69B4\",\n    \"#FFB6C1\",\n    \"#FF00FF\",\n  ],\n  sunset: [\n    \"#FF7E5F\",\n    \"#FEB47B\",\n    \"#FF9966\",\n    \"#FF8C42\",\n    \"#FFA07A\",\n    \"#FFB6C1\",\n    \"#FF9999\",\n    \"#FFAE42\",\n    \"#FF8243\",\n    \"#FFA500\",\n  ],\n  ocean: [\n    \"#00FFFF\",\n    \"#1E90FF\",\n    \"#00CED1\",\n    \"#20B2AA\",\n    \"#48D1CC\",\n    \"#40E0D0\",\n    \"#7FFFD4\",\n    \"#5F9EA0\",\n    \"#4682B4\",\n    \"#87CEEB\",\n  ],\n  forest: [\n    \"#90EE90\",\n    \"#98FB98\",\n    \"#32CD32\",\n    \"#3CB371\",\n    \"#2E8B57\",\n    \"#00FA9A\",\n    \"#00FF7F\",\n    \"#7CCD7C\",\n    \"#98FB98\",\n    \"#7FFF00\",\n  ],\n};\n\nconst VARIANT_STYLES = {\n  cosmic: {\n    background:\n      \"bg-[radial-gradient(ellipse_at_top,_var(--tw-gradient-stops))] from-indigo-950 via-[#000B2E] to-black\",\n    starTrailOpacity: 0.7,\n    starHeight: 12,\n    sparkOpacity: 0.2,\n  },\n  aurora: {\n    background: \"bg-gradient-to-b from-slate-950 via-emerald-950 to-slate-950\",\n    starTrailOpacity: 0.5,\n    starHeight: 15,\n    sparkOpacity: 0.15,\n  },\n  minimal: {\n    background: \"bg-slate-950\",\n    starTrailOpacity: 0.3,\n    starHeight: 8,\n    sparkOpacity: 0.1,\n  },\n  gradient: {\n    background: \"bg-gradient-to-br from-rose-950 via-purple-950 to-indigo-950\",\n    starTrailOpacity: 0.6,\n    starHeight: 10,\n    sparkOpacity: 0.25,\n  },\n  neon: {\n    background: \"bg-black\",\n    starTrailOpacity: 0.8,\n    starHeight: 14,\n    sparkOpacity: 0.3,\n  },\n  sunset: {\n    background: \"bg-gradient-to-b from-orange-950 via-rose-950 to-purple-950\",\n    starTrailOpacity: 0.6,\n    starHeight: 12,\n    sparkOpacity: 0.25,\n  },\n  ocean: {\n    background: \"bg-gradient-to-b from-sky-950 via-blue-950 to-indigo-950\",\n    starTrailOpacity: 0.5,\n    starHeight: 10,\n    sparkOpacity: 0.2,\n  },\n  forest: {\n    background: \"bg-gradient-to-b from-green-950 via-emerald-950 to-teal-950\",\n    starTrailOpacity: 0.5,\n    starHeight: 11,\n    sparkOpacity: 0.2,\n  },\n};\n\nexport default function Starfall({\n  count = 25,\n  speed = 1,\n  variant = \"cosmic\",\n  showBackground = true,\n  backgroundStars = 30,\n  backgroundOpacity = 0.3,\n  className,\n  ...props\n}: StarfallProps) {\n  const [stars, setStars] = useState<Star[]>([]);\n  const variantStyle = VARIANT_STYLES[variant];\n  const colors = VARIANT_COLORS[variant];\n\n  const createStar = useCallback(\n    (index: number, yPos?: number) => {\n      const color = colors[Math.floor(Math.random() * colors.length)];\n      return {\n        id: index,\n        x: Math.random() * 100,\n        y: yPos ?? -(Math.random() * 100),\n        size: Math.random() * 3 + 2,\n        speed: (Math.random() * 0.5 + 0.75) * speed,\n        color,\n        sparkRadius: Math.random() * 50 + 30,\n      };\n    },\n    [speed, colors],\n  );\n\n  useEffect(() => {\n    const initialStars = Array.from({ length: count }, (_, i) =>\n      createStar(i, -(Math.random() * 100)),\n    );\n    setStars(initialStars);\n  }, [count, createStar]);\n\n  return (\n    <div\n      className={cn(\n        \"relative h-full w-full overflow-hidden rounded-lg\",\n        showBackground && variantStyle.background,\n        className,\n      )}\n      {...props}\n    >\n      {variant === \"aurora\" && showBackground && (\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute inset-0 animate-aurora-shift bg-gradient-to-t from-emerald-500/10 via-transparent to-transparent blur-2xl\" />\n          <div className=\"absolute inset-0 animate-aurora-shift-alt bg-gradient-to-b from-cyan-500/10 via-transparent to-transparent blur-2xl\" />\n        </div>\n      )}\n\n      {showBackground && (\n        <>\n          <div className=\"absolute inset-0 bg-[radial-gradient(100%_100%_at_50%_0%,rgba(25,44,100,0.3)_0,rgba(0,0,0,0)_100%)]\" />\n          <div className=\"absolute inset-0\">\n            <div className=\"absolute inset-0 animate-nebula-shift bg-gradient-to-br from-purple-500/5 via-transparent to-transparent blur-xl\" />\n            <div className=\"absolute inset-0 animate-nebula-shift-reverse bg-gradient-to-tl from-blue-500/5 via-transparent to-transparent blur-xl\" />\n          </div>\n          <div className=\"absolute inset-0\">\n            {Array.from({ length: backgroundStars }).map((_, i) => {\n              const size = Math.random() * 2 + 1;\n              return (\n                <div\n                  key={i}\n                  className=\"absolute animate-twinkle rounded-full bg-white\"\n                  style={{\n                    width: size,\n                    height: size,\n                    top: `${Math.random() * 100}%`,\n                    left: `${Math.random() * 100}%`,\n                    opacity: Math.random() * backgroundOpacity + 0.1,\n                    animationDelay: `${Math.random() * 3}s`,\n                    animationDuration: `${Math.random() * 2 + 2}s`,\n                  }}\n                />\n              );\n            })}\n          </div>\n        </>\n      )}\n\n      {stars.map((star) => (\n        <div\n          key={star.id}\n          className=\"absolute animate-continuous-fall\"\n          style={\n            {\n              \"--fall-duration\": `${15 / star.speed}s`,\n              \"--star-x\": `${star.x}%`,\n              left: \"var(--star-x)\",\n              width: star.size,\n              height: star.size * variantStyle.starHeight,\n            } as React.CSSProperties\n          }\n        >\n          <div\n            className=\"absolute left-1/2 top-0 -translate-x-1/2 animate-pulse\"\n            style={{\n              width: star.sparkRadius,\n              height: star.sparkRadius,\n              background: `radial-gradient(circle, ${star.color}${Math.floor(variantStyle.sparkOpacity * 255).toString(16)} 0%, transparent 70%)`,\n              filter: variant === \"neon\" ? \"blur(2px)\" : \"blur(1px)\",\n            }}\n          />\n          <div\n            className=\"absolute h-full w-full\"\n            style={{\n              background: `linear-gradient(to bottom, ${star.color}, transparent)`,\n              filter: variant === \"neon\" ? \"blur(2px)\" : \"blur(0.5px)\",\n              opacity: variantStyle.starTrailOpacity,\n            }}\n          />\n          <div\n            className=\"absolute h-[3px] w-full animate-pulse\"\n            style={{\n              background: star.color,\n              boxShadow:\n                variant === \"neon\"\n                  ? `0 0 20px ${star.color}`\n                  : `0 0 10px ${star.color}`,\n              filter: variant === \"neon\" ? \"blur(2px)\" : \"blur(0.5px)\",\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}