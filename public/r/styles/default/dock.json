{
  "name": "dock",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion",
    "next-themes"
  ],
  "files": [
    {
      "path": "ui/dock.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { motion, AnimatePresence, MotionValue, useSpring, useTransform } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface DockItemProps {\n  icon: React.ReactNode;\n  label?: string;\n  onClick?: () => void;\n  isActive?: boolean;\n  color?: string;\n}\n\nexport interface DockProps extends React.HTMLAttributes<HTMLDivElement> {\n  items: DockItemProps[];\n  position?: \"bottom\" | \"left\" | \"right\" | \"top\";\n  itemSize?: number;\n  spacing?: number;\n  scale?: number;\n  variant?: \"glass\" | \"solid\" | \"floating\";\n  showLabels?: \"always\" | \"hover\" | \"never\";\n}\n\nconst useDockAnimation = (\n  mouseX: MotionValue<number>,\n  index: number,\n  itemSize: number,\n  scale: number,\n) => {\n  const distance = useTransform(mouseX, (val) => {\n    const itemCenter = index * itemSize + itemSize / 2;\n    return val - itemCenter;\n  });\n\n  const width = useTransform(distance, [-100, 0, 100], [itemSize, itemSize * scale, itemSize]);\n  const springConfig = { stiffness: 300, damping: 30, mass: 0.5 };\n\n  return useSpring(width, springConfig);\n};\n\nconst Dock = React.forwardRef<HTMLDivElement, DockProps>(\n  (\n    {\n      className,\n      items,\n      position = \"bottom\",\n      itemSize = 48,\n      spacing = 8,\n      scale = 1.8,\n      variant = \"glass\",\n      showLabels = \"hover\",\n      ...props\n    },\n    ref,\n  ) => {\n    const [mouseX, setMouseX] = React.useState(0);\n    const [isHovered, setIsHovered] = React.useState(false);\n    const containerRef = React.useRef<HTMLDivElement>(null);\n    const mouseXMotion = useSpring(mouseX, { stiffness: 300, damping: 30, mass: 0.5 });\n\n    const isHorizontal = position === \"bottom\" || position === \"top\";\n    const containerClassName = cn(\n      \"fixed flex transition-transform duration-300 ease-out\",\n      {\n        \"rounded-2xl p-2\": variant !== \"floating\",\n        \"bg-background/80 shadow-lg backdrop-blur-md\": variant === \"glass\",\n        \"bg-background border shadow-md\": variant === \"solid\",\n        \"gap-1\": variant === \"floating\",\n        \"bottom-4 left-1/2 -translate-x-1/2 hover:translate-y-0 translate-y-2\": position === \"bottom\",\n        \"top-4 left-1/2 -translate-x-1/2 hover:translate-y-0 -translate-y-2\": position === \"top\",\n        \"left-4 top-1/2 -translate-y-1/2 hover:translate-x-0 -translate-x-2\": position === \"left\",\n        \"right-4 top-1/2 -translate-y-1/2 hover:translate-x-0 translate-x-2\": position === \"right\",\n      },\n      className,\n    );\n\n    const handleMouseMove = (e: React.MouseEvent) => {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      const offset = isHorizontal ? e.clientX - rect.left : e.clientY - rect.top;\n      setMouseX(offset);\n    };\n\n    const handleMouseLeave = () => {\n      setIsHovered(false);\n      setMouseX(0);\n    };\n\n    return (\n      <motion.div\n        ref={containerRef}\n        className={containerClassName}\n        onMouseMove={handleMouseMove}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={handleMouseLeave}\n        {...props}\n      >\n        <AnimatePresence>\n          {items.map((item, index) => {\n            const width = useDockAnimation(mouseXMotion, index, itemSize + spacing, scale);\n\n            return (\n              <motion.div\n                key={index}\n                className={cn(\n                  \"relative flex items-center justify-center transition-colors\",\n                  \"group cursor-pointer\",\n                  {\n                    \"rounded-xl hover:bg-accent/50\": variant !== \"floating\",\n                    \"mb-2\": !isHorizontal && index !== items.length - 1,\n                    \"mr-2\": isHorizontal && index !== items.length - 1,\n                  },\n                )}\n                style={{\n                  width: isHorizontal ? width : itemSize,\n                  height: !isHorizontal ? width : itemSize,\n                }}\n                whileHover={{\n                  backgroundColor: item.color ? `${item.color}20` : undefined,\n                }}\n                onClick={item.onClick}\n              >\n                <motion.div\n                  className={cn(\n                    \"relative flex size-full items-center justify-center\",\n                    { \"opacity-60 group-hover:opacity-100\": !item.isActive }\n                  )}\n                  animate={{\n                    scale: item.isActive ? 1.1 : 1,\n                    color: item.isActive ? item.color : undefined,\n                  }}\n                  whileTap={{ scale: 0.95 }}\n                >\n                  {item.icon}\n                  {variant === \"floating\" && (\n                    <motion.div\n                      className=\"absolute inset-0 -z-10 rounded-xl bg-background/80 shadow-lg backdrop-blur-md\"\n                      layoutId=\"floating-bg\"\n                      transition={{ type: \"spring\", bounce: 0.2 }}\n                    />\n                  )}\n                </motion.div>\n\n                {item.label && showLabels !== \"never\" && (\n                  <AnimatePresence>\n                    {(showLabels === \"always\" || (showLabels === \"hover\" && isHovered)) && (\n                      <motion.div\n                        initial={{ opacity: 0, y: position === \"top\" ? -8 : 8 }}\n                        animate={{ opacity: 1, y: position === \"top\" ? -4 : 4 }}\n                        exit={{ opacity: 0, y: position === \"top\" ? -8 : 8 }}\n                        transition={{ duration: 0.15 }}\n                        className={cn(\n                          \"absolute whitespace-nowrap rounded-md bg-popover px-3 py-1.5\",\n                          \"text-sm text-popover-foreground shadow-md\",\n                          {\n                            \"-bottom-8\": position === \"bottom\",\n                            \"-top-8\": position === \"top\",\n                            \"left-14\": position === \"left\",\n                            \"right-14\": position === \"right\",\n                          },\n                        )}\n                      >\n                        {item.label}\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                )}\n              </motion.div>\n            );\n          })}\n        </AnimatePresence>\n      </motion.div>\n    );\n  },\n);\n\nDock.displayName = \"Dock\";\n\nexport { Dock };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}